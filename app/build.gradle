/*
 * Copyright (c) 2016. Saiy Ltd. All Rights Reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

android {
    dexOptions {
        jumboMode true
        preDexLibraries = false
        maxProcessCount 4
        javaMaxHeapSize "6g"
    }

    compileSdkVersion 31 // Update this to the latest version you need, 31 or 33 are good options.
    buildToolsVersion '30.0.3'

    defaultConfig {
        applicationId "ai.saiy.android"
        minSdkVersion 16
        targetSdkVersion 31 // Match this with compileSdkVersion
        versionCode 3
        versionName "1.0.3"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
        incremental true
    }

    flavorDimensions 'tier'
    productFlavors {

        x86 {
            ndk {
                abiFilter "x86"
            }
        }
        x86_64 {
            ndk {
                abiFilter "x86_64"
            }
        }
        arm {
            ndk {
                abiFilters "armeabi"
            }
        }
        arm7 {
            ndk {
                abiFilters "armeabi-v7a"
            }
        }
        arm8 {
            ndk {
                abiFilters "arm64-v8a"
            }
        }
        mips {
            ndk {
                abiFilter "mips"
            }
        }
        mips_64 {
            ndk {
                abiFilter "mips64"
            }
        }

        dev {
            dimension 'tier'
        }

        prod {
            dimension 'tier'
            minSdkVersion 16
        }
    }

    buildTypes {

        release {
            ndk {
                abiFilters 'armeabi-v7a', 'armeabi', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            ndk {
                abiFilters 'armeabi-v7a', 'armeabi', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations {
    implementation.exclude group: "org.apache.httpcomponents", module: "httpclient"
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.so'], dir: 'libs')
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.android.support:support-annotations:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation('com.google.apis:google-api-services-translate:v2-rev45-1.21.0') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'com.android.support'
        exclude module: 'support-annotations'
        exclude group: 'com.google.guava'
    }
    implementation 'com.google.android.gms:play-services-location:12.0.0'
    implementation 'com.google.android.gms:play-services-auth:12.0.0'
    implementation 'com.nuance:speechkit:2.1.3@aar'
    implementation 'com.google.guava:guava:20.0'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.google.http-client:google-http-client-gson:1.19.0'
    implementation 'com.microsoft.projectoxford:speechrecognition:0.6.0'
    implementation 'org.apache.commons:commons-lang3:3.6'
    implementation 'commons-codec:commons-codec:20041127.091804'
    implementation 'com.github.mpkorstanje:simmetrics-core:4.1.0'
    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation 'ai.api:sdk:1.9.0@aar'
    implementation 'commons-io:commons-io:2.4'
    implementation 'org.java-websocket:Java-WebSocket:1.3.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.1'
    implementation 'com.afollestad.material-dialogs:core:0.9.5.0'
    implementation('org.simpleframework:simple-xml:2.7.1') {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    implementation('io.grpc:grpc-okhttp:1.0.1') {
        exclude module: 'jsr305'
    }
    implementation('io.grpc:grpc-protobuf:1.0.1') {
        exclude module: 'jsr305'
    }
    implementation('io.grpc:grpc-stub:1.0.1') {
        exclude module: 'jsr305'
    }
    implementation('io.grpc:grpc-auth:1.0.1') {
        exclude module: 'jsr305'
    }
    implementation 'com.google.android.gms:play-services-location:12.0.0'
    implementation('javax.annotation:javax.annotation-api:1.2') {
        exclude module: 'annotation'
    }
    implementation('com.google.auth:google-auth-library-oauth2-http:0.3.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.android.support'
        exclude module: 'support-annotations'
        exclude group: 'com.google.guava'
        exclude module: 'jsr305'
        exclude module: 'httpclient'
    }
    implementation project(':pocketsphinx-android-5prealpha-nolib')
    implementation project(':lapp-debug')
    testImplementation 'junit:junit:4.12'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.2'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.1'
        }
    }
    generateProtoTasks {
        all().each {
            task ->
                task.builtins {
                    remove javanano
                    java {
                    }
                }

                task.plugins {
                    grpc {
                    }
                }
        }
    }
}

ant.importBuild 'assets.xml'
preBuild.dependsOn(list, checksum)
clean.dependsOn(clean_assets)
